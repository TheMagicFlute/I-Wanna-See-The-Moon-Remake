<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// ONLINE
__ONLINE_paddingText = 10;
__ONLINE_width = 250;
__ONLINE_padding = 15;
__ONLINE_alpha = 1;
__ONLINE_fade = false;
__ONLINE_fadeAlpha = 1;
__ONLINE_t = 70;
__ONLINE_sep = -1;
__ONLINE_maxTextWidth = __ONLINE_width-2*__ONLINE_paddingText;
__ONLINE_hasDestroyed = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// ONLINE
// objPlayer: The name of the player object
// : The name of the player2 object if it exists
__ONLINE_f = __ONLINE_follower;
if(instance_exists(__ONLINE_f))
{
    x = __ONLINE_f.x;
    y = __ONLINE_f.y;
}
else
{
    instance_destroy();
    exit;
}
if(__ONLINE_fade)
{
    __ONLINE_fadeAlpha -= 0.02;
    if(__ONLINE_fadeAlpha &lt;= 0)
    {
        instance_destroy();
        exit;
    }
}
__ONLINE_alpha = 1;
if(__ONLINE_follower != objPlayer)
{
    visible = __ONLINE_follower.visible;
    __ONLINE_p = objPlayer;
    if(instance_exists(__ONLINE_p))
    {
        __ONLINE_dist = distance_to_object(__ONLINE_p);
        __ONLINE_alpha = __ONLINE_dist/100;
    }
}
    __ONLINE_t -= 1;
    if(__ONLINE_t &lt; 0)
    {
        __ONLINE_fade = true;
    }
    
// Destroy all other chatboxes of the same player
if(!__ONLINE_hasDestroyed)
{
    __ONLINE_found = false;
    __ONLINE_oChatbox = 0;
    for(__ONLINE_i = 0; __ONLINE_i &lt; instance_number(__ONLINE_chatbox) &amp;&amp; !__ONLINE_found; __ONLINE_i += 1)
    {
        __ONLINE_oChatbox = instance_find(__ONLINE_chatbox, __ONLINE_i);
        if(__ONLINE_oChatbox.__ONLINE_follower == __ONLINE_follower &amp;&amp; __ONLINE_oChatbox.id != id)
        {
            __ONLINE_found = true;
        }
    }
    if(__ONLINE_found)
    {
        with(__ONLINE_oChatbox)
            instance_destroy();
    }
    __ONLINE_hasDestroyed = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// ONLINE
if font_exists(3)
    draw_set_font(3)
__ONLINE_textHeight = string_height_ext(__ONLINE_message, __ONLINE_sep, __ONLINE_maxTextWidth)
__ONLINE_height = __ONLINE_textHeight + 2 * __ONLINE_paddingText
__ONLINE_yOffset = (-__ONLINE_height) / 2 + 60
__ONLINE_left = 0
__ONLINE_right = room_width
__ONLINE_top = 0
__ONLINE_bottom = room_height
if (view_enabled &amp;&amp; view_visible[0])
{
    __ONLINE_left = view_xview[0]
    __ONLINE_right = __ONLINE_left + view_wview[0]
    __ONLINE_top = view_yview[0]
    __ONLINE_bottom = __ONLINE_top + view_hview[0]
}
__ONLINE_xx = min(max(x, (__ONLINE_left + __ONLINE_width / 2 + __ONLINE_padding)), (__ONLINE_right - __ONLINE_width / 2 - __ONLINE_padding))
__ONLINE_yy = min(max((y - __ONLINE_yOffset), (__ONLINE_top + __ONLINE_height / 2 + __ONLINE_padding)), (__ONLINE_bottom - __ONLINE_height / 2 - __ONLINE_padding))
__ONLINE__alpha = draw_get_alpha()
__ONLINE__color = draw_get_color()
draw_set_alpha(min(__ONLINE_alpha, __ONLINE_fadeAlpha))
draw_set_color(c_white)
draw_rectangle((__ONLINE_xx - __ONLINE_width / 2), (__ONLINE_yy - __ONLINE_height / 2), (__ONLINE_xx + __ONLINE_width / 2), (__ONLINE_yy + __ONLINE_height / 2), false)
draw_set_color(c_black)
draw_rectangle((__ONLINE_xx - __ONLINE_width / 2), (__ONLINE_yy - __ONLINE_height / 2), (__ONLINE_xx + __ONLINE_width / 2), (__ONLINE_yy + __ONLINE_height / 2), true)
draw_set_valign(fa_middle)
draw_set_halign(fa_center)
draw_text_ext(__ONLINE_xx, __ONLINE_yy, __ONLINE_message, __ONLINE_sep, __ONLINE_maxTextWidth)
draw_set_alpha(__ONLINE__alpha)
draw_set_color(__ONLINE__color)
if font_exists(0)
    draw_set_font(0)
draw_set_valign(fa_top)
draw_set_halign(fa_left)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
